buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
	}
}
plugins {
	id 'ca.coglinc.javacc' version '2.4.0'
	id "io.codearte.nexus-staging" version "0.8.0"
}

apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'



group = "com.github.gdjennings"
version = "1.1.0-SNAPSHOT"
description = "ODATA-like filter expressions to JPA Criteria Queries"


sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
def generatedResources = "$buildDir/generated/javacc"


sourceSets {
	main {
		java { 
			srcDirs += [generatedResources] 
		}
	}
}


task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

repositories {
	mavenCentral()
}


publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			artifacts {
				archives javadocJar, sourcesJar
			}
		}
	}
	repositories {
		mavenLocal();
	}
}

dependencies {
	// https://mvnrepository.com/artifact/javax.el/javax.el-api
	compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
	// https://mvnrepository.com/artifact/javax.persistence/persistence-api
	// https://mvnrepository.com/artifact/org.eclipse.persistence/javax.persistence
	compile group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.1.1'
	compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.2.12.Final'

	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.3'
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.3'
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.0.3'

	testRuntime group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.6.4'
	testRuntime group: 'com.h2database', name: 'h2', version: '1.4.195'
	testRuntime group: 'org.glassfish', name: 'javax.el', version:'3.0.0'
	testRuntime("org.junit.platform:junit-platform-launcher:1.0.3")
}

if (project.hasProperty('release')) {

	allprojects {
		apply plugin: 'signing'
		apply plugin: 'maven'

		artifacts {
			archives javadocJar, sourcesJar
		}
		// Signature of artifacts
		signing {
			sign configurations.archives
		}

		// OSSRH publication
		uploadArchives {
			repositories {
				mavenDeployer {
					// POM signature
					beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
					// Target repository
					repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
						authentication(userName: ossrhUser, password: ossrhPassword)
					}
					pom.project {
						name project.name
						description project.description
						packaging 'jar'
						url 'https://github.com/gdjennings/elrest-java'

						scm {
							connection 'scm:git:https://github.com/gdjennings/elrest-java.git'
							developerConnection 'scm:git:git@github.com:gdjennings/elrest-java.git'
							url 'https://github.com/gdjennings/elrest-java.git'
						}

						licenses {
							license {
								name 'The MIT License (MIT)'
								url 'http://opensource.org/licenses/MIT'
								distribution 'repo'
							}
						}

						developers {
							developer {
								id = 'gdjennings'
								name = 'Grant Jennings'
								email = 'grant@sage-mobile.com'
							}
						}
					}
				}
			}
		}

	}
}

nexusStaging {  
	username = ossrhUser
	password = ossrhPassword
}
